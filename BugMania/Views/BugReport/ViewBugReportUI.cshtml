@model IEnumerable<BugMania.Shapes.BugReport>


@{
    ViewBag.Title = "Home";
}
<div id="report-container" class="div-margin-10">
    <div class="container-fluid">
        <div class="row m-b-10">
            <div class="col-sm-6">
                @Html.ActionLink("+", "CreateReport", "CreateBugReport", null,
                    new { @class = "btn btn-success glyphicon btn-link-text color-white pull-left",
                        Title = "Create Report" })
            </div>
            <div class="col-sm-6">
                @using (Html.BeginForm("ViewFilteredReports", "ViewFilteredBugReport", FormMethod.Get)) {
                    <input type="search" name="filter" class="form-control pull-right searchbox" placeholder="Search" />
                }
            </div>
        </div>
        <div class="min-height-20">
            @if (!String.IsNullOrEmpty(ViewBag.Filters))
            {
                <a class="inline-block card-info search-filter-tag btn-link-text float-right" href="@Url.Action("ViewAllReports", "ViewAllBugReport")">
                    @ViewBag.Filters   <b>x</b>
                </a>
            }
        </div>
    </div>
    <hr />
    <div id="result">
        @Html.Partial("/Views/BugReport/_ViewBugReportCardUI.cshtml")
    </div>
</div>


@section Scripts  {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        // Fetch data when at bottom of scrollbar
        $("#main-content").scroll(function () {
            if ($("#main-content").scrollTop() + $(window).height() >= $("#report-container").height() + $(window).height() * 0.1) {
                
                FetchDataFromServer();
            }
        });

        var skipCount = 10; // start at 11th record (assumes first 10 included in initial view)
        var takeCount = 10; // return new 10 records
        var hasMoreRecords = true;
        var retrievingRecords = false;

        function FetchDataFromServer() {
            
            if (!hasMoreRecords || retrievingRecords) {
                return;
            }
            retrievingRecords = true;

            var filterString = window.location.search.split("=");
            var controllerString = "";
            var actionString = "";
            var data = {};
            // Has filter applied
            if (filterString[0] != "") {
                filterString = filterString[1];
                controllerString = "ViewFilteredBugReport";
                actionString = "FetchFilteredData";
                data = { skipCount: skipCount, takeCount: takeCount, filter: filterString }
            }
            // No filter, get all
            else {
                filterString = filterString[0];
                controllerString = "ViewAllBugReport";
                actionString = "FetchData";
                data = { skipCount: skipCount, takeCount: takeCount }
            }

            $.ajax({
                url: '/' + controllerString + '/' + actionString,
                data: data,
                datatype: 'html',
                success: function (response) {
                    if (response == "") {
                        hasMoreRecords = false;
                    } else {
                        $("#result").append(response);
                        skipCount += takeCount;
                    }
                    retrievingRecords = false;
                },
                error: function () {
                    retrievingRecords = false;
                    alert("Error loading more pages");
                }
            });
        }
    </script>
}